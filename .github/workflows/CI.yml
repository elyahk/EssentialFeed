name: Coverage Diff
env:
  ARTIFACT_PATH: "downloads"

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build-and-test-coverage:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Select xcode
        run: sudo xcode-select -switch /Applications/Xcode_13.1.0.app

      - name: Install Bundler dependencies
        run: bundle install

      - name: Install Cocoapods dependencies
        run: bundle exec pod install

      - name: Test
        run: xcodebuild clean build test -workspace EssentialFeed.xcworkspace -scheme "CI" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

#      - name: Build and Test
#        run: bundle exec fastlane macOS unit_tests

      - name: Generate Coverage
        run: bundle exec fastlane mac code_coverage

      - name: Get Coverage Result
        id: coverage
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'xcov_output/report.json'
          prop_path: 'coverage'

      - name: Show Result
        env:
          TOTAL_COVERAGE: ${{steps.coverage.outputs.prop}}
        run: |
          echo "Total: $TOTAL_COVERAGE"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-artifact
          path: xcov_output/report.json

      - name: DownLoad artifacts
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-artifact
          path: downloads

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: downloads

      - name: Get Coverage Artifact Result
        id: result-coverage
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "downloads/report.json"
          prop_path: 'coverage'

      - name: Quality Gate - Test coverage shall be above threshold
        env:
          TOTAL_COVERAGE: ${{steps.coverage.outputs.prop}}
          TEST_COVERAGE_THRESHOLD: ${{steps.result-coverage.outputs.prop}}
        run: |
          echo "Quaility Gate: checking test coverage is above threshold ..."
          echo "Threshold                     : $TEST_COVERAGE_THRESHOLD %"
          echo "Current test coverage: $TOTAL_COVERAGE %"
          if (( $(echo "$TOTAL_COVERAGE $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
            echo "OK"
          else
            echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            echo "Failed"
            exit 1
          fi
  Upload-artifacts:
    needs: build-and-test-coverage
    runs-on: macos-latest
    steps:
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-artifact
          path: xcov_output/report.json
