name: Coverage Diff

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build-and-test-coverage:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
#          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Select xcode
        run: sudo xcode-select -switch /Applications/Xcode_13.1.0.app

      - name: Install Bundler dependencies
        run: bundle install

      - name: Install Cocoapods dependencies
        run: bundle exec pod install

      - name: Test
        run: xcodebuild clean build test -workspace EssentialFeed.xcworkspace -scheme "CI" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

#      - name: Build and Test
#        run: bundle exec fastlane macOS unit_tests

      - name: Generate Coverage
        run: bundle exec fastlane mac code_coverage

      - name: Upload Xcov Output
        uses: actions/upload-artifact@v3
        with:
          name: xcov-output
          path: xcov_output/report.json

  coverage:
    runs-on: macos-latest
    needs: build-and-test-coverage
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/download-artifact@v3
        with:
          name: xcov-output
          path: xcov_output

      - name: Cache Code Coverage
        id: cache-code-coverage
        uses: actions/cache@v3
        with:
          path: downloads
          key: ${{ runner.os }}-code-coverage

      - name: Restore Code Coverage
        if: steps.cache-code-coverage.outputs.cache-hit != 'true'
        run: |
          mkdir downloads
          cp xcov_output/report.json downloads

      - name: Get Current Coverage Result
        id: coverage
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'xcov_output/report.json'
          prop_path: 'coverage'

      - name: Get Treshold Coverage Result
        id: treshold-coverage
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'downloads/report.json'
          prop_path: 'coverage'

      - name: Show Result
        env:
          CURRENT_COVERAGE: ${{steps.coverage.outputs.prop}}
          TRESHOLD_COVERAGE: ${{steps.treshold-coverage.outputs.prop}}
        run: |
          echo "Current: $CURRENT_COVERAGE"
          echo "Treshold: $TRESHOLD_COVERAGE"
      - name: Quality Gate - Test coverage shall be above threshold
        id: overall_coverage
        env:
          CURRENT_COVERAGE: ${{steps.coverage.outputs.prop}}
          TRESHOLD_COVERAGE: ${{steps.treshold-coverage.outputs.prop}}
        run: |
          echo "Quaility Gate: checking test coverage is above threshold ..."
          CURRENT_COVERAGE_PERCENTAGE=`echo|awk -v y1=$CURRENT_COVERAGE '{print y1*100}'`
          TRESHOLD_COVERAGE_PERCENTAGE=`echo|awk -v y1=$TRESHOLD_COVERAGE '{print y1*100}'`
          echo "Threshold                     : $TRESHOLD_COVERAGE_PERCENTAGE %"
          echo "Current test coverage         : $CURRENT_COVERAGE_PERCENTAGE %"
          echo "::set-output name=TRESHOLD_COVERAGE_PERCENTAGE::$TRESHOLD_COVERAGE_PERCENTAGE"
          MAX_COVERAGE_PERCENTAGE=`echo|awk -v y1=$CURRENT_COVERAGE_PERCENTAGE '{print y1+0.1}'`
          if (( $(echo "$MAX_COVERAGE_PERCENTAGE $TRESHOLD_COVERAGE_PERCENTAGE" | awk '{print ($1 >= $2)}') )); then
            echo "OK"
          else
            echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
            echo "Failed"
            exit 1
          fi
      - run: |
          echo "${{steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE}} %"
          echo "${{steps.overall_coverage.env.CURRENT_COVERAGE_PERCENTAGE}}"

      - name: Generate Coverage badge
        env:
        uses: emibcn/badge-action@v1
        with:
          label: "Code Coverage"
          status: ${{steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE}} %
          color: ${{
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 90 && 'green'              ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 80 && 'yellow,green'       ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 70 && 'yellow'             ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 60 && 'orange,yellow'      ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 50 && 'orange'             ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 40 && 'red,orange'         ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 30 && 'red,red,orange'     ||
            steps.overall_coverage.outputs.TRESHOLD_COVERAGE_PERCENTAGE > 20 && 'red,red,red,orange' ||
            'red' }}
          path: ".github/badges/coverage.svg"

      - name: Generate iOS version
        uses: emibcn/badge-action@v1
        with:
          label: iOS
          status: 13.0+
          color: 'green'
          path: ".github/badges/ios-version.svg"
      - name: Generate Swift version
        uses: emibcn/badge-action@v1
        with:
          label: swift
          status: 5.0
          color: 'green'
          path: ".github/badges/swift-version.svg"

      - name: Commit Badge
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Your Name
          author_email: mail@example.com
          message: 'Update badge'
          add: '*.svg'
          github_token: ${{github.token}}

#      - name: Extract branch name
#        shell: bash
#        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#        id: extract_branch
#      - name: Commit badge
#        env:
#          BADGE: ${{ steps.coverage.outputs.path }}
#        run: |
#          git config --local user.email "action@github.com"
#          git config --local user.name "GitHub Action"
#          git add *.svg
#          git commit -m "Add/Update badge"
#      - name: Push badge commit
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: ${{ steps.extract_branch.outputs.branch }}
